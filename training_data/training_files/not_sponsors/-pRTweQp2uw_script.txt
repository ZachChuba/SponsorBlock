in order to definitively prove that rock stars game engine has serious problems as if it needed the help we got liquid nitrogen involved to illustrate a point back when GTA 5 was new we discovered an issue in the rock star engine or raid where a faster better CPU would actually get worse performance in some instances artificially capping the framerate would solve this sort of but it's counterintuitive in our CPU benchmark for Red Dead Redemption - we found this issue again this is an odd issue because it requires a CPU that's both fast and a low thread count by modern standards there's only one CPU that fits this specific requirement right now and that's the 9700 K what a lot of people didn't understand was that it's a two part issue so we got a lot of comments saying that it's a lack of hyper threading causing the issue this is wrong and we put in some extra time to prove what rockstars issue is once and for all another topic we're visiting is that of asynchronous compute enablement where we'll test enabling it via XML in a learn more at the link in the description below so I stated this video will be broken into two separate items to research the first one the most interesting is the mystery CPU performance problem this is a little bit different from GTA 5 this time the the threshold for threads is now different it's a newer game the framerate threshold is also different and it seems to manifest in slightly different ways than in GTA 5 but ultimately the heart of the issue is the same if you saw our original two-part series on investigating the mystery FPS results for GTA 5 this is a continuation of that but with the updated rage engine it's redundant but updated rage so first CPU and then second we're going into async compute there's a setting in the XML file people have found asynchronous compute support was disabled it's set to false by default you can set it the true somebody claim that this increases the low-end performs the frame time consistency we're going to be looking at that with a couple of different video cards today let's start with a CPU issue first Red Dead Redemption 2 has a few different cases of serious stuttering but we're focusing on the one that's in the rarest of conditions there's an engine FPS threshold where after crossed performance will tank and the game will begin stuttering hard if the threshold is not crossed so if you have a lower frame rate like on a less capable CPU the stuttering will not happen provided sufficient thread count is present stuttering manifests in long frame to frame intervals intermittently which we showed in our CPU benchmark and can show on screen again just as an example we're looking at a frame time plot here and you'll see occasional spikes upward it's ultimately a game ruining experience in order to cross the FPS threshold performance must be high but threads must also be at a deficit to get the stuttering so both a thread deficit and a high frame rate are needed to encounter this issue hence why it's difficult to explain and uncommon but significant when found because high performance and medium or low thread count is an uncommon pairing it's difficult to illustrate on older fork or eight thread CPUs since they're also too slow the frequency is lower they can't hit the FPS threshold this is why everyone was sort of wrongly thinking that it's a hyper threading issue because they saw the 7700 K and 2600 K doing fine and testing but the 7600 K which doesn't have hyper threading but also just doesn't have enough threads period and the 9700 K doing poorly we Illustrated that at higher settings like at 1440p and we'll put that chart on the screen again where GPU bottlenecks are introduced the issue vanishes entirely the likelihood of these issues being encountered in the wild is low because most users would run higher settings in this game and become GPU bound I'm going to break this down one more time on camera just to be extremely clear here because this has been an issue that's been difficult to communicate because of the unique mixture of elements you need so to be absolutely clear severe stuttering happens in Red Dead 2 when a CPU hits or exceeds a framerate threshold which appears to be approximately 140 fps we found this by where with you 97 or can counter the severe stuttering issues at 1080p so the GPU was less of a bind we were able to hit about 150 FPS cap for that with a 20 atti with our settings and so that was our maximum frame rate potential on average in the CV benchmarks so what we did was we brought down the frame rate in locked steps so we went down to 144 120 and so forth and you can see that as you introduce those caps the issue begins to vanish so at 120 FPS frame rate cap limiting the ability of the engine and the GPU and the CPU to do more than 120 frames obviously the issue vanishes entirely which is why at a higher graphic setting where your GPU bound and you drag down the frame rate the issue disappears so it seems to be about 144 the threshold for this issue GTA 5 is 187 point five which was the engine FPS limit this one's a little different that's not an engine FPS limit anymore because you can go higher but now it's it's some weird marker where with sufficiently low thread count you encounter the stuttering so to reiterate once you hit or exceed 140 fps approximately stuttering will occur but only in processors from what we've seen so far that have 8 threads or fewer regardless of how those threads are created SMT or not in order to first hit the FPS threshold the CPU has to be fast then in order to start from the bug it has to have eight threads are fewer because older eight thread CPUs are not fast enough to hit the one 40-ish FPS threshold they do not stutter while newer faster CPUs will so for core 8 thread options don't really exist anymore which has been why it's been hard to illustrate this but we created one ourselves so the only reason AMD wasn't affected by this is because it's too slow and we're not saying that in a derogatory way we're saying it in a factual way we've obviously recommended quite a few AMD processors this year like the 3600 over the high fives and have to put that koala that qualifier out there otherwise people freaked out sadly so we overclocked the 3700 ax with liquid nitrogen to prove the points we'll get to that data later and then next and these speeds are simply not fast enough to hit the FPS threshold in our test environment just like the 2600 K not let's go through a couple more numbers what we did here was we did a few different things so we took a ninety nine hundred K and we tested it in eight core eight thread configuration disabling some of the cores and obviously threads in that test we also tested it in a four core eight thread configuration so effectively we tested it with not even effectively just period we tested it without hyper threading and we tested it with hyper threading but both of those configurations were at eight total threads one of which was eight cores and eight threads the other was four cores and eight threads so now we could address everybody's different theories about this and put it to rest let's give those charts on the screen now this chart is sorted by 0.1 percent lowest highest to lowest and asterisk will highlight some of those indicates that stuttering did occur in the testing intermittently but was not reproducible regularly or during our tests past recording period in order to get the four core eight thread ninety nine hundred K configuration to consistently stutter we had to make up for the loss of computing power and threads by overclocking the CPU remember that eight core eight thread will perform better than four core eight thread even at the same frequency so there's a loss there too we also brought four core eight thread up to 5.9 gigahertz and 1.53 five volts on liquid nitrogen which allowed us to make up for the loss of threads the end results was 137 to 140 FPS average which is great but 0.1% lows were down to six to seven fps that's because we hit the 140 ish threshold in terms of frame times that means we were hitting spikes upwards of 170 milliseconds lawn which is very noticeable and also doing so intermittently which makes it worse this matches the original 9700 k result almost exactly we've now replicated the issue on a four core eight thread hyper threaded part so even though we've turned off half of the cores hyper threading is still on so hyper threading was clearly not the problem it just required enough speed to make up for the trade-offs so the reality of ever encountering this is effectively zero unless on a 9700 K and also pushing for over 140 FPS the eight core eight thread ninety-nine hundred K variant did worse as its physical core configuration push performance higher so a better CPU gets a result as long as it's limited to a threat the 9700 Kay with 144 hurts and vsync applied still encountered the issue showing that the threshold for stuttering is 144 and below the 120 Hertz vsync 9700 K did excellently with 120 FPS average expectedly and an 80 fps your harm set low the 60 Hertz config with vsync was the same as it's below the cap but it is unnecessarily restricted in the face of 120 Hertz working fine we didn't encounter a single errant frame time spike for these two configurations and at 5 gigahertz in 720p the night I heard K at 4 core 8 threads began to show issues but it was hard to push the performance high enough to really stutter without that liquid nitrogen change we did we were at 22 F PS 0.1% lows which means the stutters weren't as bad or as frequent but still present and beginning to average out the data in a negative fashion so far these results illustrate that it has nothing to do with hyper threading as a direct reason for the performance rather entirely to deal with straight frame throughput just like we said the first time that said this better demonstrates what we were originally showing as stated in our initial benchmark this become something of a non-issue if you just to limit the framerate below 140 or increase the graphics settings to a point where the GPU is the bind like high settings on a 20 80 TI that's more realistic anyway and if you set the frame rate limit to 120 you'll definitely be fine even on an i7 RK as for Andy we had to invest a lot more effort into getting this to bug out because AMD isn't natively fast enough to trigger the issue here's a chart with the 3700 ex stock the 3700 ex was doing 131 FPS average and 78 fps department sent loads which are both fine numbers in order to push closer to the stutter threshold we tried a higher frequency memory we tried to need an infinity fabric in memory to 100 101 and we tried running that 4.3 gigahertz all core but we had issues where the CPU would not always reproduce the original performance this might be related to patches in between so we'll ignore the original number and work with the new data instead the only times we were able to trigger hardened stuttering on the 3700 acts were when we had it clocked to 4.8 5 gigahertz or 4.80 gigahertz with 30 800 megahertz RAM and 1 to 1 to 1 clocks also overclocking the GPU which finally caused it to Stoddard down to 21 FP SEO Baran % Louis as a quick aside we couldn't go higher than 5 gigahertz or even 4.9 with the 3,700 X because in order to do that we need more cold and to bring the temperature down below a hundred degrees we have to drop infinity fabric to 1467 megahertz which makes performance worse so we stayed below 5 gigahertz that way we could keep the Infinity fabrics at a higher value anyway the 21 fps 0.1% low number we have here was enough for accomplishing our goal which was to investigate whether this issue can occur on both AMD and Intel and whether its vendor agnostic and it is vendor agnostic but it's extremely difficult to reproduce on AMD and he's not immune it's just that AMD has a raw speed deficit and so is able to skirt by escape by the issue some of this may be GPU driver overhead related as well which is why overclocking the GPU would have helped with the AMD CPU we also saw a stutters at 4.8 gigahertz though where 0.1 percent lows were 30fps note that all of these for the 3700 acts were eight core eight thread doing for core 8 thread would not provide sufficient performance to even begin to reach the FPS threshold and then also remember that average isn't a maximum so a lower 0.1% low value with frame time spikes north of 100 milliseconds for example will also drag down the average number below where the threshold is so it doesn't look like it's hitting even though it might be so then closing out this part of the video this confirms that no hyper threading is not the reason for the performance here and the lack thereof is not the game doesn't know the difference all it knows is that it wants in this instance it appears to be at least eight threat well more than eight threads to work optimally with a high frame rate as illustrated by the 999 hundred K so there is an optimization here Rockstar does have a problem that we'd like to see them solve in the future that side it's also a problem that is sort of resolvable in air quotes there because you can work around it by bringing down your top-end performance to say 120 FPS max and realistically most people who are running something like a 9700 K and a GPU sufficiently fast even allow triggering of this issue will probably be running at least high settings anyway which would bring you down below that FPS threshold so you would be fine it's a very specific user who will encounter this one who has maybe a 9700 K and also wants 140 FPS in which case you're out of luck it's an optimization issue then people like to say that games are poorly optimized all the time you see it SOI is one of the top comments on a new benchmark this game is poorly optimized for PC no one knows what they're talking about when they say that if you asked most of those comments or what is unoptimized about it can you point to what can improve they wouldn't know not at a code level not even at an abstract level most the time people just have no idea now sometimes you can point to something like textures and have a good idea there but for the most part it's hard to identify this is something that's pretty easily identifiable as a specific issue that Rockstar should fix at some point because it's existed for four or five years now so Rockstar you have absolutely no excuse for continuing to let this issue exist in the rage in the engine the Rockstar Games engine threads in a game engine are typically assigned to things like you might have one thread for rendering that's pretty common for all the draw calls things like that that's typically your most heavily loaded thread you'll probably have another one for physics you might have another one for AI you'll probably have one for audio processing game logic might be in there with AI stuff like that and however Rage is set up it's set up in a way that at again has to be a sufficiently high frequency high FPS which is what makes it so weird I just efficiently high FPS something catches maybe it's tripping over the render thread where now stutters are introduced and there's not enough load sharing between the threads so the slowest one is going to start choking performance that's our theory for it anyway but this should be resolved probably talked about this one enough for now I'll note that we did try enabling triple buffering and it didn't didn't work here and we tried lowering the ingame refresh rate without setting vsync and that didn't work but you saw our earlier results for that stuff if you want to set it up let's get into the asynchronous compute topic the next theory has been largely a community propagated one that async compute in the XML file helps improve frame time stability we've had a lot of trouble validating this claim did lead us to discover some general consistency issues with the game asynchronous compute must be leveraged both at a code level and a hardware level and the XML settings file located in documents Rockstar Games and Red Dead 2 settings folder contains a flag for async compute that's set to false by default now there's probably a reason it's set to false by default like maybe not working or not working properly we're not quite sure what it is but our first set of tests was on taurine with the 28 ET I tested at 4k our results were almost perfectly accurate between both async on and a sink off configurations by perfectly accurate what we really mean is they were basically identical and each run was more or less identical to the previous run which is great consistency is good in benchmarking we're in 64 FPS average 39 to 40 FPS average for the 1% lows and 38 fps for the 0.1% lows on average between the results the original bench from launch day was a little higher across the board on average but also tested before numerous patches these three data points are averaged of about 15 total runs and therefore tens of thousands of frame time data points so we're confident in the repetition and the consistency of the results the standard deviation for the async on and async off tests with this particular configuration both run on the same day 0.3 fps standard deviation for 1% lows and 0.7 fps standard deviation for 0.1% lows we were unable to validate user remarks of the async flag did anything on the 28th et I at least set this resolution we next tested with a 2070 super at 1440p for this one we were again happy to see the consistency of our test passes thus far for these two our standard deviation is roughly the same as the 2080 Ti and our data winds up almost precisely between a sync on and a sync off there was no difference for a 2070 super at 1440p with high settings and some custom settings mixed in just to be sure that we weren't hitting some resolution constraint before anything else became relevant we also dropped down to 1080p medium with the 2070 super for this set of tests we again saw the same results between each benchmark we have thus far been unable to produce differences on these two r-tx cards onto the difficult one out of the RX with the 700 XE was a very mixed bag we spent an entire day and a bit more running and re running tests on two different 5700 ax T's just in case however we also learned that the benchmark results are less consistent there doesn't seem to be a pattern to it some games the first pass will score notably lower or higher than others so we do add passes to account for that when it happens but in this game it'll seemingly randomly score higher or lower for frame time pacing it doesn't matter what order it's in or how many passes Iran or how many times you restart this indicates mix the overall frame time consistency it did not service in our initial benchmarks because we had higher scoring on average as he's on that initial benchmark video but after dozens of additional tests we've now narrowed it down so that you can see frame time pacing can be more variable than originally seen so here's a sample list of a few of the tests that we ran most recently without charting this should help show some of the raw data for what we're dealing with this isn't all the data but it's enough to show you what's going on for asynchronous compute support disabled we measured 0.1% low values between a completely accessible 68 FPS average and a for that for 0.1% lows and a poorly paced 35 to 36 fps this was one set of passes but we ran another after this and saw much the same placement we can't definitively draw any conclusions from this aside from the fact that the averages are largely unaffected by occasional one-off frame time hitches in the middle of testing that can last for anywhere from 5 to 15 frames the Tai Chi had the same inconsistent performance I'll be at different absolute values we didn't run the Tai Chi as much it was really just there to make sure there weren't any crazy issues with other card that we didn't know about and there were not this is presumably what async enablement is supposed to fix but it doesn't we had identical results with asynchronous compute support enabled in the xml file when things went without a literal hitch we measured 64 FPS 0.1% lows and it hit 36 to 38 when the one-off spikes dragged down the averaging across anywhere from again maybe 5-7 to 15 frames asynchronous compute enabled and disabled it changed nothing here we don't have any conclusion we can draw from this oh then to say the XT seems to be scoring less consistently in our task platform we validated this on two separate identical GP test benches and so we'll have to revisit this after some additional testing maybe after more patches to figure out what to do next to better illustrate this variability we can rely on some frame time plots this first plot shows the Gigabyte 5700 XT at 1080p and with one of the higher results and one of the lower results no settings were changed between these the game was fully restarted between each of these two tests in this set of data you can see that they're actually pretty close to identical all the way through the test with one exception around the 3,000 frame mark in this instance we have sustained spikes up to just above 28 milliseconds or at 28 milliseconds which drags down the average frame time significantly the spike in this specific example sustains for approximately seven frames meaning we've gone from about 11 millisecond frame times to nearly 34 1/5 of a second that's definitely noticeable it's not the worst we've seen in this game but it is a slight hitch and it does affect the averages in a big way and a second plot with two separate sets of data but also with asynchronous compute support disabled we see the same behavior repeat things are mostly equivalent up until one hard spike and it's around the same spot in the same test path where we hit approximately 28 milliseconds for several consecutive frames now if we do a frame time plot for asynchronous compute support enabled you'll see basically the same thing it seemed to be agnostic toward the setting so enabling or disabling it in the XML file did not affect this performance it was fully capable of performing well or not great in either instance finally we have one set of data where we were able to produce a replicable repeated result that seems to have verified some of the claims online specifically at 1440p high on the 5700 xt we were able to repeatedly demonstrate that the average is 0.1% low figure dropped with the default async compute option of off we retested this multiple times like all the others and also added a second GPU to the rotation the end result was about 8 sets of data for off and four on across the two cards so roughly in the range of 60 to 80,000 individual frame time data points where we found that 1% Lowe's did actually improve we couldn't replicate this in any of the other tests but it seems to replicate consistently here this may have something to do with which parts of the pipeline are getting hit harder at the two resolutions or maybe just the game we validated this multiple times on both cards so it appears to be a real result at least in this test and async compute enablement did help in this specific set of settings just for some visualization here's one final frame time plot you can see that it's roughly the same performance behavior as we saw in the previous 1080p results except it was repeatable and predictable with these settings it almost seems like the asynchronous compute option wasn't applying at 1080p and we did some things like write-protect the file and making the changes in different orders rebooting the system things like that making sure we applied all changes to the settings file without making any changes in game all kinds of stuff to make sure that it wasn't overriding or overwriting the file when we launch the game to test so we're not quite sure what to make of the difference between the 1080p and 1440p data with a visited ax t aside from pointing to a potential game bug after all there is a reason that's disabled by default and it's probably because something was broken or not implemented otherwise they would have just turned it on if it always makes things better and just for clarity all of well most of the data today was done in Vulcan there was a DX 12 data point in here in the first half the video for the CPU stuff and we've done some Vulcan and dx12 comparisons in general for our test bench we didn't really see a difference in the lows that was meaningful between them there's a bit of a difference but it was outweighed on average by the higher average framerate more than you might typically see and games like hitman 2 for example and in looking around and doing more testing on now well for different benches which consists of probably maybe six motherboards of different types because we did the CPU benchmarks as well on each one of those is potentially different board we we have a pretty good snapshot of performance and this game does definitely have some weird quirks where it's you talk about people pointing that game saying this is poorly optimized but not quite knowing why this is a fantastic example of a game that is genuinely poorly optimized and we can point to reasons why so those are pretty rare but anyway the the end all for these two issues for the 9700 Kay it's a specific issue as explained a few times in this video I'm not going to go through it again but it's resolvable via workaround if you intentionally lower your frame rate either by cap or just by increasing the graphics quality to the extent that your GPU becomes a bottleneck and you reduce your frame rate at the same time below something like 140 and then for the asynchronous compute thing up until the very end the last set of tests we ran we weren't able to validate the claims that turning it on or off even mattered at all for Vulcan which was the primary claim was that it helps with Vulcan and with AMD cards but we couldn't validate it period with the 200 devices we tested and the two resolutions and we couldn't validate it for the first half of our AMD test but in that final set of 1440 tests it seems to work and for a lot of this stuff there's not really a clear indication as to why there's this disparity of when it does vs. doesn't work and we have theories as noted one of them would be which part of the pipeline is being loaded for example and is something else becoming burdened before the asynchronous compute flag even matters but at the same time we don't really have a way to to specifically confirm some of those hypotheses I guess at this point and so the end result is that we can say sometimes it seems like it helps and sometimes it seems like it doesn't help and the best way for you to know if you actually care is to run multiple test passes and use external software don't use the built-in benchmarks frame time reporting use some external software run it multiple times on and off and then see if it helps doing one pass of each isn't enough to to really determine it because if you look at our set of example test data we've put in this video it's all over the place sometimes so you might get a good run if you only do one pass might get a great run the first time and then you'll probably get a great run the second time if you switch settings and now you don't know if it even does anything but if you test twice you might have enough data or ideally more than that but twice might start giving you enough data to figure it out ideally you'd do something like four passes for each so anyway really strange and we we can we can definitively state that it seems to help sometimes we can't definitively state when or why so if it helps you cool it seems like that might not be placebo in some instances and if it doesn't help you well you don't have the right mix of hardware or settings to make it work and we're not gonna really dig into it further because it's just it doesn't matter you just do some quick tasks yourself for each configuration and and see if it helps but and it doesn't seem like it hurts in the very least didn't seem like that so and then finally it is off by default so we would assume there's a reason for that and it's probably related to what we saw where performance is all over the place and it doesn't seem to do anything with some settings so if it's off maybe it's just not implemented properly or maybe it's bugs or what our idea but anyway there is a reason it's off by default we just don't know what that is and Rockstar is very hard to get a hold of these days so thanks for watching hope that helps you out definitely an interesting mystery with the 9700 Kay stuff that was more interesting than the async stuff but check back for more subscribe as always you can go to store documents access net to pick up some of the items from our store if you want to support us directly our large mod mats are in stock and shipping and our tool kits are in stock and shipping and for each item purchased on store documents excess net during the month of November we are working with even reforestation projects and our distributor to plant a minimum of 10 trees per item ordered or you go to patreon.com/scishow and access to support thank you for watching oh and one more thing let us know if you have any specific sets of hardware and graphics settings where you have different experiences with this these options the game let us know how it worked out for you what hardware you're running software settings are running so that we can kind of create a better picture of what's going on with red that but we should probably wait for a batch ultimately anyway thanks for watching I'll see you all next time [Music] 