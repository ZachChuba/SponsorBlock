in the middle of the search we know there's a processor it's an incredibly complex piece of technology that is built on some very basic principles and i want to see if i can make one that doesn't use any electricity whatsoever roll that intro i don't i don't have an intro now i usually do project videos in one shot to be fair this is usually a car channel so it's not that today this is serving just as much of a diary to my madness as it is a build guide sort of thing but at any rate the cad files are in the comments below if you want to follow along at home while we're waiting for the printer and plasma cutter to finish up a few things here and there uh let's go in and let's do some homework math is hard it's also a form of something called extended cognition it's redistributing our thoughts and internal capabilities to the outside world like how we can use a lever to exert more force on an object we can write down numbers to extend our cognitive ability and do more complex equations and more complex mathematics without having to do it all in our head so we can use our environment to store data think of this like you're in the desert and you're surrounded by rocks you could in order to communicate arrange them in a numbered pattern theoretically you could do this with as little as seven like a seven segment display or you could align them in either one rock or zero rocks and as you went along you could order those in a certain fashion and eventually if you went far enough you'd end up somewhere around xkcd 505 but that's a dangerous path but you can communicate with rocks in the sand admittedly these functions can oversimplify things almost to a fault there's an old joke about physicists that a farmer is having trouble producing milk from his cows so he writes the local physics department and after a few months they send a letter back and they say we have your answer but first we have to assume there's a spherical cow in a vacuum but realistically the thing you want to take away from this is that mathematics is the vessel to transmit thinking to machines now what we just went over is something called binary and it is literally just a one or a zero and the cool thing is is that adding numbers in binary which this will come into play a little bit later is exactly the same as adding numbers in a regular set so for example if we take 28 plus 21 that's equal to 49. if we convert those two top numbers to binary so 1 1 1 0 0 is 28 and then 1 0 1 0 1 is 21 and we just add those two numbers together just like we normally would in a standard mathematic procedure just adding them top to bottom we would come out with one one zero zero zero one which is 49 in binary we also need something called logic gates this is an and gate which means that it takes one input and one input and it will output one over here if either one of these is zero then this will become a zero [Music] [Music] we also have a basic or gate which means either this one or this one can be on for it to output a one so if this one and this one is a one it will still output one if this one is a one and this one's a zero it'll still output one if both of these are zeros then this will output a zero [Music] [Music] as far as my goals for this project i think a standard adder is a little bit basic it's been done i think i'm really looking for something that aligns a bit more traditionally with a standard processor unit so it has a bus it has a memory it has a timer has a few things like that and i really want it to be programmable it's not going to be fast and it's going to be very heavy but um i also want to focus on modularity a bit so right now both of these are kind of similar they're kind of in the same shape but i really want to set up something where i can hot swap these out no problem they're built on the same basic platform and they can use be used interchangeably that's really my goal there um of course this will all be be available for free as i build this these two are already in the link in the description below and we'll update it as we go along overall i'm really happy with this like this or gate right now both are zero so we're outputting zero one zero outputs one zero one outputs one and then of course one one outputs one so that's a great little or gate no problems there very nice and smooth and gate is pretty good it's not quite on the level that that ore gate is i can also make that a lot more efficient smaller more compact better that's a first design it works great i'm gonna downsize it a lot anyways this is an and gate um it's not quite as fluid as i wanted i need to put some hard stops in there like i did the and gate so it can only move a certain amount of travel these are kind of dependent on external forces and a spring return would solve most of the problems on this little critter right here but for right now it works okay the last one we need to talk about is a not gate also a not gate is sometimes called an inverter because that's exactly what it does whatever value comes into it it'll output the opposite so if we have a one going into it or if we have a zero going into it it'll output a one those are your basic three logic gates and like meryl streep and the devil wears prada they pretty much carry everything for the sole fact that any of the additional logic gates that you may see exclusive or gates exclusive and gates uh man gates any of those can be made out of those basic logic gates as an example this is an exclusive or gate we have an and gate we have an or gate we have a knot gate or an inverter and then we have another and gate over here and these two inputs are tied together and put a input b and then it'll output one value so this function right here will only output a one if a or b is on beautiful thing is is that if you have logic gates you can create circuits if you can create circuits you can make computers and if you can make computers you can make programs so that brings us back around to our joke about physicists if all of computing can be reduced to three rules uh isn't that the same as a spherical cow yeah kinda there's literally thousands of different deviations and changes and theories out there and if i haven't scared off everybody yet there's a thing called the perceptron algorithm developed by frank rosenblatt back in the 1950s and 1960s it's really the first stone cast in the machine learning in neural networks like we see today not subscribed um that's based on that's built on the backs of those early that perceptron algorithm and those early machine learning algorithms developed in the 50s i could do an entire video on perceptron and how it ties the mcculloch pits model of neuron activity into computer science it's it's fascinating stuff really now to my knowledge i'm in a little bit of uncharted territory here mechanical computers and stuff have been around for a very very long time but most of the original ones perform very specific operations like seen in this model here where it adds sine waves together but it can't really do anything else per se by the time that our modern structure of machine code and logic came into effect vacuum tubes and electricity was the by far the better way of doing all this so the mechanical aspect never really got explored then and for good reason it's the worst way of doing it by far unless you don't have electricity um and then it's the best way of doing things um because it doesn't require anything but the basic laws of physics and i mean newton's first second and third law again spherical cow and that's kind of why i've done a big push for basic logic gates is because it's the foundations of how this is all put together and because there's already been a computer built out of basic logic gates that you can build at home check out ben eater's 8-bit project and using that loose metric of how computers can be built and programmed and taught using machine code all that we have to do is put and gates in the right spot and it'll work right well okay on the surface a lot of things looked a lot easier like i don't have to debounce a signal coming out of a 555 ic timer and that makes things a lot easier but originally i was going to use a geneva drive for a good constant source of motion but as all of the physicists just screamed out in agony geneva drives have something called jerk and without diving completely into why things exist that's a momentary bit of acceleration that's um a fault of a geneva drive i'm working through that i have some ideas so let's put all this together in a solidworks model this is a 4-bit adder designed entirely in solidworks using the logic gates that i just showed earlier it takes two four bit numbers and adds them together just like we did on the whiteboard it also has 2400 components and takes up about a 24 by 24 square um i need to consolidate that down a little bit otherwise it'll take up this room but by all accounts it does work that's in a simulation space i'm probably going to do some optimization before i build that specific one but it's a great proof of concept to stack all these together douglas adams in the restaurant at the end of the universe once said that the function of art is to hold a mirror up to nature and ignoring the incredibly paradoxical quote following that i don't necessarily agree with it um i think art itself is in nature and technology just reveals where it's hidden this computer theoretically given enough time could calculate the mandelbrot set it could solve differential equations that are foundations of of physics beauty and engineering doesn't necessarily have to be efficiency and i think that ends up somewhere around simple mechanics that's why i build a lot of things that aren't necessarily complex but they're fun to explore and figure out anyways this is my plan um i'm putting together the pieces and this is going to be kind of an ongoing series as i start to put it together as always the files are in the comments below so feel free to mess around with it a little bit um if you're here for car content there'll be a jaguar video next week the comments below and thanks for watching overall let me 