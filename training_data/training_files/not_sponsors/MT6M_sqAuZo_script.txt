the software engineering industry is very unique and that developers and companies just openly share their intellectual property like right now I can go see what cutting-edge technology the very bright engineers at Google are working on and I can see angular in just all of its glory what's great about this is can actually see the code for the project so when a company creates one of the worst frameworks in existence can go learn from their blenders and almost all open-source projects use some form of version control so can actually go back in time and see the progress of the project so I went back 9000 commits on the angularjs project to see where it all went wrong and found some commits my ex grandma made in 1969 who I had disowned unfortunately after finding out she contributed to angular but I can also see what looks like the start of the project in 2010 if want to could actually see the code at each one of these points but I don't actually want to give myself any nightmares today so we're gonna go ahead and skip that part the go-to place to host your open source code has become github at least for the web development community now there are other options like git lab and I suppose bitbucket is also kind of an option but only ever see that being used when companies don't give another option it's kind of like asking a kid whether he wants to go eat at Stacy's salad buffet or McDonald's except your company doesn't actually give a choice and they're just forcing arugula down your throat developers don't want to touch a bit bucket with a ten-foot pole and some of that is PTSD from JIRA and some of it is just bitbucket used to suck and I don't know maybe it still sucks but I had to block it at the DNS level after the incident gate lab is actually pretty good but they came after github and then they just kind of decided not to compete with them on the community aspects and just went after those juicy enterprise whales now developers aren't just sticking their code on github so can admire it although that kind of is part of it but also they want to use it and also contribute back to it sometimes developers are big poopy heads and put restrictive licenses on their code but that's pretty uncommon and most of the time were just free to use it in your own projects and in fact it is pretty common to using a lot of open-source code in fact I would say most games or websites or apps pretty much any piece of software has more code written by strangers on the internet then code written by the main developers it's also kind of an exponential thing like might think yeah I'm just using this code from this guy over here but then that guy is using code from these two guys over here who are then using code from these four over there and the next thing know you're depending on like 20 other guys using other people's code in the JavaScript world is probably the most extreme example of this and there's this little website that I like to use to visualize this where put in a name of an NPM package and it will show a graph of all the other packages it relies on so might only use Express but under the hood you're actually relying on like 52 other packages using open source code is a double-edged sword it allows to create things much faster and create things you'd never be able to without it but at the same time are opening yourself up and increasing the surface area where bugs can be introduced all it takes is one out of the 600 developers who just wrote some code that rely on to have a mouse slip when they are copy pasting code from Stack Overflow and introducing a bug in their code which then introduces a bug in this other guys code which then changes the behavior over here and the next thing know you're up at 2:00 a.m. on Saturday sipping cold coffee because productions down now that you're excited to start using some open source code let's talk about how actually decide which one to use in your project because developers like to reinvent the wheel and there's like five different ways to figure out if a number is even the most obvious way is to just look at the code but this can be kind of tedious and sometimes don't like what see so an alternative is to see how many people have started a project and then pick the one with the most stars for example react.js has one hundred and fifty-one thousand stars compared to angular's measly 63k so we can conclude that react.js is a better framework this doesn't always work view j/s kind of has a lot of stars so whenever you're unhappy with the results can use this other formula that I made up where take the number of stars and divide it by the number of tags and then doing that reacts yes is back in first place a question I hear newer developers ask is whether it's worth it to contribute to open source and I think the answer is maybe because it's very similar to an unpaid internship are doing free labor in exchange or in the hopes of building your network or gaining some experience and some people think that is just incredibly dumb and others think it is a great way to springboard your career if it's something are interested in I definitely think it is worth trying because it can just lead to opportunities but personally contributing to open source has never really appealed to me I'd rather just kind of build my own open source project and even that doesn't really excite me that much the dream when open source your code is for other people to help make it great and this happens to some extent but it takes a lot of careful work to maintain and to keep the project from divulging into a complete dumpster fire because some developers get very entitled when it comes to open source and they just kind of demand features to be built from the maintainer and they want the code to be a certain way and they just kind of try to grasp hold and just take the project and all while offering no help of course they are just know creating issues and then they get super upset at when refuse to implement it so yeah no thank maintaining an open-source project is a totally different beast than just writing open source code have to deal with all this other crap and most of the time were just totally uncompensated and it just feels like are spending all your free time just managing these entitled brats before can actually get to this point have to have people actually using your project and so some of may have uploaded your code to github but then no one actually tried it so what I want to do is give a few tips on how to get your project off the ground stars are important and probably have zero of them right now so we need to increase that number and the most obvious way to do this is say posting on reddit or know going to a meet-up and talking or even sharing on social media but what I want to do today is share with a secret technique called the star on star method how it works is find someone else's code who has zero stars and then give that a star and then create an issue and you're like hey can star my project back and then wait for that to happen and when it does unstart and delete your issue that way do not look like a spammer using this technique I was able to get my code up to three stars one for my mom and two for my sister who for some reason had to github accounts a few days later my github account got banned but it was definitely worth it for the short period of time where I experienced open source fame know what I'm feeling generous today so I want to give two bonus tips that can use to just build credibility for your code and the first one is to make sure to include a logo in your readme pretty much all serious projects have them and it doesn't even matter what have there it can be a pumpkin spice latte for all I care as long as there is some graphic whatsoever secondly take a look at these commit messages and tell me if want to use this code the answer is no it's way too bland and boring now take a look at these commit messages much better a and emoji can go a very long way now have the requisite knowledge to become open source famous so don't forget to credit me and read me when reach three stars also don't forget to tune in next week where we'll be talking about the average salary of open source engineers which may or may not be $0 also I want to give a big thanks to aleena who came up with the first part of the title of this video unless I change it which I may very well do but either way thank aleena 